(function() {
    var implementors = Object.fromEntries([["binary_serde",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/beta/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"binary_serde/enum.Endianness.html\" title=\"enum binary_serde::Endianness\">Endianness</a>"],["impl&lt;const PADDING_LENGTH: <a class=\"primitive\" href=\"https://doc.rust-lang.org/beta/core/primitive.usize.html\">usize</a>, const PADDING_VALUE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/beta/core/primitive.u8.html\">u8</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/beta/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"binary_serde/struct.BinarySerdePadding.html\" title=\"struct binary_serde::BinarySerdePadding\">BinarySerdePadding</a>&lt;PADDING_LENGTH, PADDING_VALUE&gt;"]]],["proc_macro2",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/beta/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/beta/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/beta/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"proc_macro2/extra/struct.DelimSpan.html\" title=\"struct proc_macro2::extra::DelimSpan\">DelimSpan</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/beta/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>"]]],["recursive_array",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/beta/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"recursive_array/struct.EmptyRecursiveArray.html\" title=\"struct recursive_array::EmptyRecursiveArray\">EmptyRecursiveArray</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[848,1042,321]}